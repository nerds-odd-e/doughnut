openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
- {}
paths:
  /api/user:
    get:
      tags:
      - rest-user-controller
      operationId: getUserProfile
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/User"
    post:
      tags:
      - rest-user-controller
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/User"
  /api/user/generate-token:
    post:
      tags:
      - rest-user-controller
      operationId: generateToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TokenConfigDTO"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserToken"
  /api/testability/use_real_sandbox_github_and_close_all_github_issues:
    post:
      tags:
      - testability-rest-controller
      operationId: closeAllGithubIssues
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/testability/update_current_user:
    post:
      tags:
      - testability-rest-controller
      operationId: updateCurrentUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/testability/trigger_exception:
    post:
      tags:
      - testability-rest-controller
      operationId: triggerException
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/testability/time_travel_relative_to_now:
    post:
      tags:
      - testability-rest-controller
      operationId: timeTravelRelativeToNow
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TimeTravelRelativeToNow"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
  /api/testability/time_travel:
    post:
      tags:
      - testability-rest-controller
      operationId: timeTravel
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TimeTravel"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
  /api/testability/share_to_bazaar:
    post:
      tags:
      - testability-rest-controller
      operationId: shareToBazaar
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/testability/replace_service_url:
    post:
      tags:
      - testability-rest-controller
      operationId: replaceServiceUrl
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
  /api/testability/randomizer:
    post:
      tags:
      - testability-rest-controller
      operationId: randomizer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Randomization"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
  /api/testability/link_notes:
    post:
      tags:
      - testability-rest-controller
      operationId: linkNotes
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/testability/inject_suggested_questions:
    post:
      tags:
      - testability-rest-controller
      operationId: injectSuggestedQuestion
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SuggestedQuestionsData"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/testability/inject_notes:
    post:
      tags:
      - testability-rest-controller
      operationId: injectNotes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotesTestData"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int32
  /api/testability/inject_circle:
    post:
      tags:
      - testability-rest-controller
      operationId: injectCircle
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/testability/inject-predefined-questions:
    post:
      tags:
      - testability-rest-controller
      operationId: injectPredefinedQuestion
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PredefinedQuestionsTestData"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PredefinedQuestion"
  /api/testability/feature_toggle:
    get:
      tags:
      - testability-rest-controller
      operationId: getFeatureToggle
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
    post:
      tags:
      - testability-rest-controller
      operationId: enableFeatureToggle
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
  /api/testability/clean_db_and_reset_testability_settings:
    post:
      tags:
      - testability-rest-controller
      operationId: resetDBAndTestabilitySettings
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/subscriptions/{subscription}:
    post:
      tags:
      - rest-subscription-controller
      operationId: update
      parameters:
      - name: subscription
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubscriptionDTO"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Subscription"
  /api/subscriptions/{subscription}/delete:
    post:
      tags:
      - rest-subscription-controller
      operationId: destroySubscription
      parameters: []
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: integer
                  format: int32
  /api/subscriptions/notebooks/{notebook}/subscribe:
    post:
      tags:
      - rest-subscription-controller
      operationId: createSubscription
      parameters:
      - name: notebook
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubscriptionDTO"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Subscription"
  /api/settings/current-model-version:
    get:
      tags:
      - rest-global-settings-controller
      operationId: getCurrentModelVersions
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GlobalAiModelSettings"
    post:
      tags:
      - rest-global-settings-controller
      operationId: setCurrentModelVersions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GlobalAiModelSettings"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GlobalAiModelSettings"
  /api/recall-prompts/{recallPrompt}/regenerate:
    post:
      tags:
      - rest-recall-prompt-controller
      operationId: regenerate
      parameters:
      - name: recallPrompt
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuestionContestResult"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RecallPrompt"
  /api/recall-prompts/{recallPrompt}/contest:
    post:
      tags:
      - rest-recall-prompt-controller
      operationId: contest
      parameters:
      - name: recallPrompt
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/QuestionContestResult"
  /api/recall-prompts/{recallPrompt}/answer:
    post:
      tags:
      - rest-recall-prompt-controller
      operationId: answerQuiz
      parameters:
      - name: recallPrompt
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnswerDTO"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AnsweredQuestion"
  /api/predefined-questions/{predefinedQuestion}/toggle-approval:
    post:
      tags:
      - rest-predefined-question-controller
      operationId: toggleApproval
      parameters:
      - name: predefinedQuestion
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PredefinedQuestion"
  /api/predefined-questions/{predefinedQuestion}/suggest-fine-tuning:
    post:
      tags:
      - rest-predefined-question-controller
      operationId: suggestQuestionForFineTuning
      parameters:
      - name: predefinedQuestion
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuestionSuggestionCreationParams"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SuggestedQuestionForFineTuning"
  /api/predefined-questions/{note}/refine-question:
    post:
      tags:
      - rest-predefined-question-controller
      operationId: refineQuestion
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PredefinedQuestion"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PredefinedQuestion"
  /api/predefined-questions/{note}/note-questions:
    get:
      tags:
      - rest-predefined-question-controller
      operationId: getAllQuestionByNote
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PredefinedQuestion"
    post:
      tags:
      - rest-predefined-question-controller
      operationId: addQuestionManually
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PredefinedQuestion"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PredefinedQuestion"
  /api/predefined-questions/generate-question-without-save:
    post:
      tags:
      - rest-predefined-question-controller
      operationId: generateQuestionWithoutSave
      parameters:
      - name: note
        in: query
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PredefinedQuestion"
  /api/notes/{referenceNote}/create-after:
    post:
      tags:
      - rest-note-creation-controller
      operationId: createNoteAfter
      parameters:
      - name: referenceNote
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NoteCreationDTO"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NoteCreationResult"
  /api/notes/{parentNote}/create:
    post:
      tags:
      - rest-note-creation-controller
      operationId: createNote
      parameters:
      - name: parentNote
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NoteCreationDTO"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NoteCreationResult"
  /api/notes/{note}/updateWikidataId:
    post:
      tags:
      - rest-note-controller
      operationId: updateWikidataId
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WikidataAssociationCreation"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NoteRealm"
  /api/notes/{note}/semantic-search:
    post:
      tags:
      - rest-search-controller
      operationId: semanticSearchWithin
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchTerm"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NoteSearchResult"
  /api/notes/{note}/search:
    post:
      tags:
      - rest-search-controller
      operationId: searchForLinkTargetWithin
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchTerm"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NoteSearchResult"
  /api/notes/{note}/review-setting:
    post:
      tags:
      - rest-note-controller
      operationId: updateRecallSetting
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecallSetting"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RedirectToNoteResponse"
  /api/notes/{note}/delete:
    post:
      tags:
      - rest-note-controller
      operationId: deleteNote
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NoteRealm"
  /api/notes/semantic-search:
    post:
      tags:
      - rest-search-controller
      operationId: semanticSearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchTerm"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NoteSearchResult"
  /api/notes/search:
    post:
      tags:
      - rest-search-controller
      operationId: searchForLinkTarget
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchTerm"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NoteSearchResult"
  /api/notes/move_after/{note}/{targetNote}/{asFirstChild}:
    post:
      tags:
      - rest-note-controller
      operationId: moveAfter
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      - name: targetNote
        in: path
        required: true
        schema:
          type: integer
      - name: asFirstChild
        in: path
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NoteRealm"
  /api/notebooks/{notebook}:
    get:
      tags:
      - rest-notebook-controller
      operationId: get
      parameters:
      - name: notebook
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Notebook"
    post:
      tags:
      - rest-notebook-controller
      operationId: update_1
      parameters:
      - name: notebook
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotebookSettings"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Notebook"
  /api/notebooks/{notebook}/update-index:
    post:
      tags:
      - rest-notebook-controller
      operationId: updateNotebookIndex
      parameters:
      - name: notebook
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
  /api/notebooks/{notebook}/share:
    post:
      tags:
      - rest-notebook-controller
      operationId: shareNotebook
      parameters:
      - name: notebook
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Notebook"
  /api/notebooks/{notebook}/reset-index:
    post:
      tags:
      - rest-notebook-controller
      operationId: resetNotebookIndex
      parameters:
      - name: notebook
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
  /api/notebooks/{notebookId}/obsidian:
    post:
      tags:
      - rest-notebook-controller
      summary: Import Obsidian file
      operationId: importObsidian
      parameters:
      - name: notebookId
        in: path
        description: Notebook ID
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: Obsidian zip file to import
              required:
              - file
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
  /api/notebooks/create:
    post:
      tags:
      - rest-notebook-controller
      operationId: createNotebook
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NoteCreationDTO"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RedirectToNoteResponse"
  /api/notebook_certificate_approvals/{notebookCertificateApproval}/approve:
    post:
      tags:
      - rest-notebook-certificate-approval-controller
      operationId: approve
      parameters:
      - name: notebookCertificateApproval
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NotebookCertificateApproval"
  /api/notebook_certificate_approvals/request-approval/{notebook}:
    post:
      tags:
      - rest-notebook-certificate-approval-controller
      operationId: requestApprovalForNotebook
      parameters:
      - name: notebook
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NotebookCertificateApproval"
  /api/memory-trackers/{memoryTracker}/self-evaluate:
    post:
      tags:
      - rest-memory-tracker-controller
      operationId: selfEvaluate
      parameters:
      - name: memoryTracker
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SelfEvaluation"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/MemoryTracker"
  /api/memory-trackers/{memoryTracker}/remove:
    post:
      tags:
      - rest-memory-tracker-controller
      operationId: removeFromRepeating
      parameters:
      - name: memoryTracker
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/MemoryTracker"
  /api/memory-trackers/{memoryTracker}/answer-spelling:
    post:
      tags:
      - rest-memory-tracker-controller
      operationId: answerSpelling
      parameters:
      - name: memoryTracker
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnswerSpellingDTO"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SpellingResultDTO"
  /api/mcp/notes/create:
    post:
      tags:
      - mcp-note-creation-controller
      operationId: createNote_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/McpNoteAddDTO"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NoteCreationResult"
  /api/links/{link}:
    post:
      tags:
      - rest-link-controller
      operationId: updateLink
      parameters:
      - name: link
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LinkCreation"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NoteRealm"
  /api/links/move/{sourceNote}/{targetNote}:
    post:
      tags:
      - rest-link-controller
      operationId: moveNote
      parameters:
      - name: sourceNote
        in: path
        required: true
        schema:
          type: integer
      - name: targetNote
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NoteMoveDTO"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NoteRealm"
  /api/links/create/{sourceNote}/{targetNote}:
    post:
      tags:
      - rest-link-controller
      operationId: linkNoteFinalize
      parameters:
      - name: sourceNote
        in: path
        required: true
        schema:
          type: integer
      - name: targetNote
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LinkCreation"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NoteRealm"
  /api/fine-tuning/{suggestedQuestion}/duplicate:
    post:
      tags:
      - rest-fine-tuning-data-controller
      operationId: duplicate
      parameters:
      - name: suggestedQuestion
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SuggestedQuestionForFineTuning"
  /api/fine-tuning/{suggestedQuestion}/delete:
    post:
      tags:
      - rest-fine-tuning-data-controller
      operationId: delete
      parameters:
      - name: suggestedQuestion
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SuggestedQuestionForFineTuning"
  /api/fine-tuning/upload-and-trigger-fine-tuning:
    post:
      tags:
      - rest-fine-tuning-data-controller
      operationId: uploadAndTriggerFineTuning
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
  /api/conversation/{conversationId}/send:
    post:
      tags:
      - rest-conversation-message-controller
      operationId: replyToConversation
      parameters:
      - name: conversationId
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ConversationMessage"
  /api/conversation/{conversationId}/ai-reply:
    post:
      tags:
      - rest-conversation-message-controller
      operationId: getAiReply
      parameters:
      - name: conversationId
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SseEmitter"
  /api/conversation/recall-prompt/{recallPrompt}:
    post:
      tags:
      - rest-conversation-message-controller
      operationId: startConversationAboutRecallPrompt
      parameters:
      - name: recallPrompt
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Conversation"
  /api/conversation/note/{note}:
    get:
      tags:
      - rest-conversation-message-controller
      operationId: getConversationsAboutNote
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Conversation"
    post:
      tags:
      - rest-conversation-message-controller
      operationId: startConversationAboutNote
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Conversation"
  /api/conversation/assessment-question/{assessmentQuestion}:
    post:
      tags:
      - rest-conversation-message-controller
      operationId: startConversationAboutAssessmentQuestion
      parameters:
      - name: assessmentQuestion
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Conversation"
  /api/circles:
    get:
      tags:
      - rest-circle-controller
      operationId: index
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Circle"
    post:
      tags:
      - rest-circle-controller
      operationId: createCircle
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Circle"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Circle"
  /api/circles/{circle}/notebooks:
    post:
      tags:
      - rest-circle-controller
      operationId: createNotebookInCircle
      parameters:
      - name: circle
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NoteCreationDTO"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RedirectToNoteResponse"
  /api/circles/join:
    post:
      tags:
      - rest-circle-controller
      operationId: joinCircle
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CircleJoiningByInvitation"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Circle"
  /api/certificate/{notebook}:
    get:
      tags:
      - rest-certificate-controller
      operationId: getCertificate
      parameters:
      - name: notebook
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Certificate"
    post:
      tags:
      - rest-certificate-controller
      operationId: claimCertificate
      parameters:
      - name: notebook
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Certificate"
  /api/bazaar/{bazaarNotebook}/remove:
    post:
      tags:
      - rest-bazaar-controller
      operationId: removeFromBazaar
      parameters:
      - name: bazaarNotebook
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BazaarNotebook"
  /api/audio/audio-to-text:
    post:
      tags:
      - rest-ai-audio-controller
      operationId: audioToText
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/AudioUploadDTO"
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TextFromAudioWithCallInfo"
  /api/assimilation:
    post:
      tags:
      - assimilation-controller
      operationId: assimilate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InitialInfo"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MemoryTracker"
  /api/assessment/{assessmentQuestionInstance}/answer:
    post:
      tags:
      - rest-assessment-controller
      operationId: answerQuestion
      parameters:
      - name: assessmentQuestionInstance
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnswerDTO"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AssessmentQuestionInstance"
  /api/assessment/{assessmentAttempt}:
    post:
      tags:
      - rest-assessment-controller
      operationId: submitAssessmentResult
      parameters:
      - name: assessmentAttempt
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AssessmentAttempt"
  /api/assessment/questions/{notebook}:
    post:
      tags:
      - rest-assessment-controller
      operationId: generateAssessmentQuestions
      parameters:
      - name: notebook
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AssessmentAttempt"
  /api/ai/suggest-title/{note}:
    post:
      tags:
      - rest-ai-controller
      operationId: suggestTitle
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SuggestedTitleDTO"
  /api/ai/submit-tool-results/{threadId}/{runId}:
    post:
      tags:
      - rest-ai-controller
      operationId: submitToolCallsResult
      parameters:
      - name: threadId
        in: path
        required: true
        schema:
          type: string
      - name: runId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                $ref: "#/components/schemas/ToolCallResult"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
  /api/ai/generate-image:
    post:
      tags:
      - rest-ai-controller
      operationId: generateImage
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AiGeneratedImage"
  /api/ai/cancel-run/{threadId}/{runId}:
    post:
      tags:
      - rest-ai-controller
      operationId: cancelRun
      parameters:
      - name: threadId
        in: path
        required: true
        schema:
          type: string
      - name: runId
        in: path
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
  /api/ai/assistant/recreate-notebook/{notebook}:
    post:
      tags:
      - rest-ai-assistant-creation-controller
      operationId: recreateNotebookAssistant
      parameters:
      - name: notebook
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NotebookAssistant"
  /api/ai/assistant/recreate-default:
    post:
      tags:
      - rest-ai-assistant-creation-controller
      operationId: recreateDefaultAssistant
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
  /api/user/{user}:
    patch:
      tags:
      - rest-user-controller
      operationId: updateUser
      parameters:
      - name: user
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDTO"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/User"
  /api/text_content/{note}/title:
    patch:
      tags:
      - rest-text-content-controller
      operationId: updateNoteTitle
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NoteUpdateTitleDTO"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NoteRealm"
  /api/text_content/{note}/details:
    patch:
      tags:
      - rest-text-content-controller
      operationId: updateNoteDetails
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NoteUpdateDetailsDTO"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NoteRealm"
  /api/notes/{note}:
    get:
      tags:
      - rest-note-controller
      operationId: show
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NoteRealm"
    patch:
      tags:
      - rest-note-controller
      operationId: updateNoteAccessories
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/NoteAccessoriesDTO"
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NoteAccessory"
  /api/notes/{note}/undo-delete:
    patch:
      tags:
      - rest-note-controller
      operationId: undoDeleteNote
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NoteRealm"
  /api/notebooks/{notebook}/move-to-circle/{circle}:
    patch:
      tags:
      - rest-notebook-controller
      operationId: moveToCircle
      parameters:
      - name: notebook
        in: path
        required: true
        schema:
          type: integer
      - name: circle
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Notebook"
  /api/notebooks/{notebook}/ai-assistant:
    get:
      tags:
      - rest-notebook-controller
      operationId: getAiAssistant
      parameters:
      - name: notebook
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NotebookAiAssistant"
    patch:
      tags:
      - rest-notebook-controller
      operationId: updateAiAssistant
      parameters:
      - name: notebook
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAiAssistantRequest"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NotebookAiAssistant"
  /api/memory-trackers/{memoryTracker}/mark-as-repeated:
    patch:
      tags:
      - rest-memory-tracker-controller
      operationId: markAsRepeated
      parameters:
      - name: memoryTracker
        in: path
        required: true
        schema:
          type: integer
      - name: successful
        in: query
        required: true
        schema:
          type: boolean
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/MemoryTracker"
  /api/fine-tuning/{suggestedQuestion}/update-suggested-question-for-fine-tuning:
    patch:
      tags:
      - rest-fine-tuning-data-controller
      operationId: updateSuggestedQuestionForFineTuning
      parameters:
      - name: suggestedQuestion
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuestionSuggestionParams"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SuggestedQuestionForFineTuning"
  /api/conversation/{conversationId}/read:
    patch:
      tags:
      - rest-conversation-message-controller
      operationId: markConversationAsRead
      parameters:
      - name: conversationId
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ConversationMessage"
  /api/wikidata/search/{search}:
    get:
      tags:
      - rest-wikidata-controller
      operationId: searchWikidata
      parameters:
      - name: search
        in: path
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WikidataSearchEntity"
  /api/wikidata/entity-data/{wikidataId}:
    get:
      tags:
      - rest-wikidata-controller
      operationId: fetchWikidataEntityDataByID
      parameters:
      - name: wikidataId
        in: path
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/WikidataEntityData"
  /api/user/get-tokens:
    get:
      tags:
      - rest-user-controller
      operationId: getTokens
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserToken"
  /api/user/current-user-info:
    get:
      tags:
      - rest-current-user-info-controller
      operationId: currentUserInfo
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CurrentUserInfo"
  /api/testability/github_issues:
    get:
      tags:
      - testability-rest-controller
      operationId: githubIssues
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
                  additionalProperties:
                    type: object
  /api/recalls/recalling:
    get:
      tags:
      - rest-recalls-controller
      operationId: recalling
      parameters:
      - name: timezone
        in: query
        required: true
        schema:
          type: string
      - name: dueindays
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/DueMemoryTrackers"
  /api/recalls/overview:
    get:
      tags:
      - rest-recalls-controller
      operationId: overview
      parameters:
      - name: timezone
        in: query
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RecallStatus"
  /api/recall-prompts/{recallPrompt}:
    get:
      tags:
      - rest-recall-prompt-controller
      operationId: showQuestion
      parameters:
      - name: recallPrompt
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AnsweredQuestion"
  /api/recall-prompts/{memoryTracker}/question:
    get:
      tags:
      - rest-recall-prompt-controller
      operationId: askAQuestion
      parameters:
      - name: memoryTracker
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RecallPrompt"
  /api/notes/{note}/note-info:
    get:
      tags:
      - rest-note-controller
      operationId: getNoteInfo
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NoteInfo"
  /api/notes/{note}/graph:
    get:
      tags:
      - rest-note-controller
      operationId: getGraph
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      - name: tokenLimit
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GraphRAGResult"
  /api/notes/{note}/descendants:
    get:
      tags:
      - rest-note-controller
      operationId: getDescendants
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GraphRAGResult"
  /api/notes/{note}/accessory:
    get:
      tags:
      - rest-note-controller
      operationId: showNoteAccessory
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NoteAccessory"
  /api/notes/recent:
    get:
      tags:
      - rest-note-controller
      operationId: getRecentNotes
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NoteRealm"
  /api/notebooks:
    get:
      tags:
      - rest-notebook-controller
      operationId: myNotebooks
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NotebooksViewedByUser"
  /api/notebooks/{notebook}/obsidian:
    get:
      tags:
      - rest-notebook-controller
      operationId: downloadNotebookForObsidian
      parameters:
      - name: notebook
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: byte
  /api/notebooks/{notebook}/notes:
    get:
      tags:
      - rest-notebook-controller
      operationId: getNotes
      parameters:
      - name: notebook
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Note"
  /api/notebooks/{notebook}/dump:
    get:
      tags:
      - rest-notebook-controller
      operationId: downloadNotebookDump
      parameters:
      - name: notebook
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BareNote"
  /api/notebook_certificate_approvals/get-all-pending-request:
    get:
      tags:
      - rest-notebook-certificate-approval-controller
      operationId: getAllPendingRequest
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NotebookCertificateApproval"
  /api/notebook_certificate_approvals/for-notebook/{notebook}:
    get:
      tags:
      - rest-notebook-certificate-approval-controller
      operationId: getApprovalForNotebook
      parameters:
      - name: notebook
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NotebookCertificateApproval"
  /api/memory-trackers/{memoryTracker}:
    get:
      tags:
      - rest-memory-tracker-controller
      operationId: show_1
      parameters:
      - name: memoryTracker
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/MemoryTracker"
  /api/memory-trackers/{memoryTracker}/spelling-question:
    get:
      tags:
      - rest-memory-tracker-controller
      operationId: getSpellingQuestion
      parameters:
      - name: memoryTracker
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SpellingQuestion"
  /api/memory-trackers/recently-reviewed:
    get:
      tags:
      - rest-memory-tracker-controller
      operationId: getRecentlyReviewed
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MemoryTracker"
  /api/memory-trackers/recent:
    get:
      tags:
      - rest-memory-tracker-controller
      operationId: getRecentMemoryTrackers
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MemoryTracker"
  /api/healthcheck:
    get:
      tags:
      - rest-health-check-controller
      operationId: ping
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/fine-tuning/all-suggested-questions-for-fine-tuning:
    get:
      tags:
      - rest-fine-tuning-data-controller
      operationId: getAllSuggestedQuestions
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SuggestedQuestionForFineTuning"
  /api/failure-reports:
    get:
      tags:
      - rest-failure-report-controller
      operationId: failureReports
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/failure-reports/{failureReport}:
    get:
      tags:
      - rest-failure-report-controller
      operationId: show_2
      parameters:
      - name: failureReport
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FailureReportForView"
  /api/data_upgrade:
    get:
      tags:
      - rest-health-check-controller
      operationId: dataUpgrade
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
  /api/conversation/{conversationId}:
    get:
      tags:
      - rest-conversation-message-controller
      operationId: getConversation
      parameters:
      - name: conversationId
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Conversation"
  /api/conversation/{conversationId}/messages:
    get:
      tags:
      - rest-conversation-message-controller
      operationId: getConversationMessages
      parameters:
      - name: conversationId
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ConversationMessage"
  /api/conversation/unread:
    get:
      tags:
      - rest-conversation-message-controller
      operationId: getUnreadConversations
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ConversationMessage"
  /api/conversation/all:
    get:
      tags:
      - rest-conversation-message-controller
      operationId: getConversationsOfCurrentUser
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Conversation"
  /api/circles/{circle}:
    get:
      tags:
      - rest-circle-controller
      operationId: showCircle
      parameters:
      - name: circle
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CircleForUserView"
  /api/bazaar:
    get:
      tags:
      - rest-bazaar-controller
      operationId: bazaar
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BazaarNotebook"
  /api/assimilation/count:
    get:
      tags:
      - assimilation-controller
      operationId: getAssimilationCount
      parameters:
      - name: timezone
        in: query
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AssimilationCountDTO"
  /api/assimilation/assimilating:
    get:
      tags:
      - assimilation-controller
      operationId: assimilating
      parameters:
      - name: timezone
        in: query
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Note"
  /api/assessment:
    get:
      tags:
      - rest-assessment-controller
      operationId: getMyAssessments
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AssessmentAttempt"
  /api/ai/dummy:
    get:
      tags:
      - rest-ai-controller
      operationId: dummyEntryToGenerateDataTypesThatAreRequiredInEventStream
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/DummyForGeneratingTypes"
  /api/ai/available-gpt-models:
    get:
      tags:
      - rest-ai-controller
      operationId: getAvailableGptModels
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
  /api/user/token/{tokenId}:
    delete:
      tags:
      - rest-user-controller
      operationId: deleteToken
      parameters:
      - name: tokenId
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
  /api/failure-reports/delete:
    delete:
      tags:
      - rest-failure-report-controller
      operationId: deleteFailureReports
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
components:
  schemas:
    Circle:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          maxLength: 255
          minLength: 1
      required:
      - id
      - name
    Ownership:
      type: object
      properties:
        id:
          type: integer
          format: int32
        circle:
          $ref: "#/components/schemas/Circle"
        ownerName:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        externalIdentifier:
          type: string
        ownership:
          $ref: "#/components/schemas/Ownership"
        dailyAssimilationCount:
          type: integer
          format: int32
        spaceIntervals:
          type: string
        admin:
          type: boolean
      required:
      - externalIdentifier
      - id
      - name
    TokenConfigDTO:
      type: object
      properties:
        label:
          type: string
          maxLength: 100
          minLength: 0
      required:
      - label
    UserToken:
      type: object
      properties:
        id:
          type: integer
          format: int32
        userId:
          type: integer
          format: int32
        token:
          type: string
        label:
          type: string
      required:
      - id
      - label
      - token
    TimeTravelRelativeToNow:
      type: object
      properties:
        hours:
          type: integer
          format: int32
    TimeTravel:
      type: object
      properties:
        travel_to:
          type: string
    Randomization:
      type: object
      properties:
        choose:
          type: string
          enum:
          - first
          - last
          - seed
        seed:
          type: integer
          format: int32
    MCQWithAnswer:
      type: object
      properties:
        multipleChoicesQuestion:
          $ref: "#/components/schemas/MultipleChoicesQuestion"
        correctChoiceIndex:
          type: integer
          format: int32
        strictChoiceOrder:
          type: boolean
      required:
      - correctChoiceIndex
      - multipleChoicesQuestion
      - strictChoiceOrder
    MultipleChoicesQuestion:
      type: object
      properties:
        stem:
          type: string
        choices:
          type: array
          items:
            type: string
      required:
      - choices
      - stem
    QuestionSuggestionParams:
      type: object
      properties:
        comment:
          type: string
        preservedQuestion:
          $ref: "#/components/schemas/MCQWithAnswer"
        preservedNoteContent:
          type: string
        positiveFeedback:
          type: boolean
        realCorrectAnswers:
          type: string
      required:
      - preservedQuestion
      - realCorrectAnswers
    SuggestedQuestionsData:
      type: object
      properties:
        examples:
          type: array
          items:
            $ref: "#/components/schemas/QuestionSuggestionParams"
          writeOnly: true
    NoteTestData:
      type: object
      properties:
        Title:
          type: string
        Details:
          type: string
        Parent Title:
          type: string
        Skip Memory Tracking:
          type: boolean
        Image Url:
          type: string
        Image Mask:
          type: string
        Wikidata Id:
          type: string
    NotesTestData:
      type: object
      properties:
        noteTestData:
          type: array
          items:
            $ref: "#/components/schemas/NoteTestData"
          writeOnly: true
        externalIdentifier:
          type: string
          writeOnly: true
        circleName:
          type: string
          writeOnly: true
    PredefinedQuestionTestData:
      type: object
      properties:
        Note Title:
          type: string
        Question:
          type: string
        Answer:
          type: string
        One Wrong Choice:
          type: string
        Approved:
          type: boolean
    PredefinedQuestionsTestData:
      type: object
      properties:
        notebookTitle:
          type: string
        notebookCertifiable:
          type: boolean
        predefinedQuestionTestData:
          type: array
          items:
            $ref: "#/components/schemas/PredefinedQuestionTestData"
    PredefinedQuestion:
      type: object
      properties:
        id:
          type: integer
          format: int32
        multipleChoicesQuestion:
          $ref: "#/components/schemas/MultipleChoicesQuestion"
        correctAnswerIndex:
          type: integer
          format: int32
        approved:
          type: boolean
      required:
      - id
      - multipleChoicesQuestion
    SubscriptionDTO:
      type: object
      properties:
        dailyTargetOfNewNotes:
          type: integer
          format: int32
    Note:
      type: object
      properties:
        noteTopology:
          $ref: "#/components/schemas/NoteTopology"
        details:
          type: string
        parentId:
          type: integer
          format: int32
        updatedAt:
          type: string
          format: date-time
        id:
          type: integer
          format: int32
        createdAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
          readOnly: true
        wikidataId:
          type: string
      required:
      - createdAt
      - id
      - noteTopology
      - updatedAt
    NoteTopology:
      type: object
      properties:
        id:
          type: integer
          format: int32
        titleOrPredicate:
          type: string
        shortDetails:
          type: string
        linkType:
          type: string
          enum:
          - no link
          - related to
          - a specialization of
          - an application of
          - an instance of
          - a part of
          - tagged by
          - an attribute of
          - the opposite of
          - author of
          - using
          - an example of
          - before
          - similar to
          - confused with
        objectNoteTopology:
          $ref: "#/components/schemas/NoteTopology"
        parentOrSubjectNoteTopology:
          $ref: "#/components/schemas/NoteTopology"
        title:
          type: string
      required:
      - id
      - titleOrPredicate
    Notebook:
      type: object
      properties:
        id:
          type: integer
          format: int32
        certifiable:
          type: boolean
        notebookSettings:
          $ref: "#/components/schemas/NotebookSettings"
        creatorId:
          type: string
        title:
          type: string
        circle:
          $ref: "#/components/schemas/Circle"
        headNoteId:
          type: integer
          format: int32
        shortDetails:
          type: string
        updated_at:
          type: string
          format: date-time
      required:
      - headNoteId
      - id
      - notebookSettings
      - title
      - updated_at
    NotebookSettings:
      type: object
      properties:
        skipMemoryTrackingEntirely:
          type: boolean
        selectMCPNotebook:
          type: boolean
        numberOfQuestionsInAssessment:
          type: integer
          format: int32
        certificateExpiry:
          type: string
          default: 1y
          example: 1y 6m
    Subscription:
      type: object
      properties:
        headNote:
          $ref: "#/components/schemas/Note"
        title:
          type: string
        id:
          type: integer
          format: int32
        dailyTargetOfNewNotes:
          type: integer
          format: int32
        user:
          $ref: "#/components/schemas/User"
        notebook:
          $ref: "#/components/schemas/Notebook"
        fromDTO:
          $ref: "#/components/schemas/SubscriptionDTO"
          writeOnly: true
      required:
      - id
    GlobalAiModelSettings:
      type: object
      properties:
        questionGenerationModel:
          type: string
        evaluationModel:
          type: string
        othersModel:
          type: string
    QuestionContestResult:
      type: object
      properties:
        advice:
          type: string
        rejected:
          type: boolean
    RecallPrompt:
      type: object
      properties:
        id:
          type: integer
          format: int32
        multipleChoicesQuestion:
          $ref: "#/components/schemas/MultipleChoicesQuestion"
        notebook:
          $ref: "#/components/schemas/Notebook"
      required:
      - id
      - multipleChoicesQuestion
    AnswerDTO:
      type: object
      properties:
        choiceIndex:
          type: integer
          format: int32
    Answer:
      type: object
      properties:
        id:
          type: integer
          format: int32
        choiceIndex:
          type: integer
          format: int32
        correct:
          type: boolean
      required:
      - correct
      - id
    AnsweredQuestion:
      type: object
      properties:
        note:
          $ref: "#/components/schemas/Note"
        predefinedQuestion:
          $ref: "#/components/schemas/PredefinedQuestion"
        answer:
          $ref: "#/components/schemas/Answer"
        answerDisplay:
          type: string
        recallPromptId:
          type: integer
          format: int32
      required:
      - answer
      - predefinedQuestion
      - recallPromptId
    QuestionSuggestionCreationParams:
      type: object
      properties:
        comment:
          type: string
        isPositiveFeedback:
          type: boolean
    SuggestedQuestionForFineTuning:
      type: object
      properties:
        id:
          type: integer
          format: int32
        comment:
          type: string
        preservedQuestion:
          $ref: "#/components/schemas/MCQWithAnswer"
        preservedNoteContent:
          type: string
        realCorrectAnswers:
          type: string
        createdAt:
          type: string
          format: date-time
        positiveFeedback:
          type: boolean
      required:
      - id
      - preservedQuestion
    NoteCreationDTO:
      type: object
      properties:
        newTitle:
          type: string
          maxLength: 150
          minLength: 1
        wikidataId:
          type: string
          pattern: ^$|Q\d+
      required:
      - newTitle
    NoteCreationResult:
      type: object
      properties:
        created:
          $ref: "#/components/schemas/NoteRealm"
        parent:
          $ref: "#/components/schemas/NoteRealm"
      required:
      - created
      - parent
    NoteRealm:
      type: object
      properties:
        id:
          type: integer
          format: int32
        note:
          $ref: "#/components/schemas/Note"
        fromBazaar:
          type: boolean
        children:
          type: array
          items:
            $ref: "#/components/schemas/Note"
        inboundReferences:
          type: array
          items:
            $ref: "#/components/schemas/Note"
        notebook:
          $ref: "#/components/schemas/Notebook"
      required:
      - id
      - note
    WikidataAssociationCreation:
      type: object
      properties:
        wikidataId:
          type: string
      required:
      - wikidataId
    SearchTerm:
      type: object
      properties:
        searchKey:
          type: string
        allMyNotebooksAndSubscriptions:
          type: boolean
        allMyCircles:
          type: boolean
      required:
      - searchKey
    NoteSearchResult:
      type: object
      properties:
        noteTopology:
          $ref: "#/components/schemas/NoteTopology"
        distance:
          type: number
          format: float
      required:
      - noteTopology
    RecallSetting:
      type: object
      properties:
        rememberSpelling:
          type: boolean
        skipMemoryTracking:
          type: boolean
        level:
          type: integer
          format: int32
    RedirectToNoteResponse:
      type: object
      properties:
        noteId:
          type: integer
          format: int32
    NotebookCertificateApproval:
      type: object
      properties:
        id:
          type: integer
          format: int32
        notebook:
          $ref: "#/components/schemas/Notebook"
        lastApprovalTime:
          type: string
          format: date-time
      required:
      - id
      - notebook
    SelfEvaluation:
      type: object
      properties:
        adjustment:
          type: integer
          format: int32
    MemoryTracker:
      type: object
      properties:
        id:
          type: integer
          format: int32
        note:
          $ref: "#/components/schemas/Note"
        lastRecalledAt:
          type: string
          format: date-time
        nextRecallAt:
          type: string
          format: date-time
        assimilatedAt:
          type: string
          format: date-time
        repetitionCount:
          type: integer
          format: int32
        forgettingCurveIndex:
          type: integer
          format: int32
        removedFromTracking:
          type: boolean
        spelling:
          type: boolean
      required:
      - id
      - nextRecallAt
      - note
    AnswerSpellingDTO:
      type: object
      properties:
        spellingAnswer:
          type: string
    SpellingResultDTO:
      type: object
      properties:
        note:
          $ref: "#/components/schemas/Note"
        answer:
          type: string
        isCorrect:
          type: boolean
      required:
      - note
    McpNoteAddDTO:
      type: object
      properties:
        parentNote:
          type: string
        noteCreationDTO:
          $ref: "#/components/schemas/NoteCreationDTO"
    LinkCreation:
      type: object
      properties:
        linkType:
          type: string
          enum:
          - no link
          - related to
          - a specialization of
          - an application of
          - an instance of
          - a part of
          - tagged by
          - an attribute of
          - the opposite of
          - author of
          - using
          - an example of
          - before
          - similar to
          - confused with
      required:
      - linkType
    NoteMoveDTO:
      type: object
      properties:
        asFirstChild:
          type: boolean
    ConversationMessage:
      type: object
      properties:
        id:
          type: integer
          format: int32
        message:
          type: string
        sender:
          $ref: "#/components/schemas/User"
        readByReceiver:
          type: boolean
        createdAt:
          type: string
          format: date-time
      required:
      - id
      - message
    SseEmitter:
      type: object
      properties:
        timeout:
          type: integer
          format: int64
    AssessmentQuestionInstance:
      type: object
      properties:
        id:
          type: integer
          format: int32
        multipleChoicesQuestion:
          $ref: "#/components/schemas/MultipleChoicesQuestion"
        answer:
          $ref: "#/components/schemas/Answer"
      required:
      - id
      - multipleChoicesQuestion
    Conversation:
      type: object
      properties:
        id:
          type: integer
          format: int32
        subject:
          $ref: "#/components/schemas/ConversationSubject"
        subjectOwnership:
          $ref: "#/components/schemas/Ownership"
        conversationInitiator:
          $ref: "#/components/schemas/User"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        aiAssistantThreadId:
          type: string
        lastAiAssistantThreadSync:
          type: string
          format: date-time
      required:
      - createdAt
      - id
      - updatedAt
    ConversationSubject:
      type: object
      properties:
        assessmentQuestionInstance:
          $ref: "#/components/schemas/AssessmentQuestionInstance"
        note:
          $ref: "#/components/schemas/Note"
        answeredQuestion:
          $ref: "#/components/schemas/AnsweredQuestion"
    CircleJoiningByInvitation:
      type: object
      properties:
        invitationCode:
          type: string
          maxLength: 20
          minLength: 10
      required:
      - invitationCode
    Certificate:
      type: object
      properties:
        id:
          type: integer
          format: int32
        user:
          $ref: "#/components/schemas/User"
        notebook:
          $ref: "#/components/schemas/Notebook"
        startDate:
          type: string
          format: date-time
        expiryDate:
          type: string
          format: date-time
        creatorName:
          type: string
      required:
      - expiryDate
      - id
      - startDate
    BazaarNotebook:
      type: object
      properties:
        id:
          type: integer
          format: int32
        notebook:
          $ref: "#/components/schemas/Notebook"
      required:
      - id
      - notebook
    AudioUploadDTO:
      type: object
      properties:
        uploadAudioFile:
          type: string
          format: binary
        additionalProcessingInstructions:
          type: string
        previousNoteDetailsToAppendTo:
          type: string
        isMidSpeech:
          type: boolean
    NoteDetailsCompletion:
      type: object
      properties:
        deleteFromEnd:
          type: integer
          format: int32
        completion:
          type: string
      required:
      - completion
      - deleteFromEnd
    TextFromAudioWithCallInfo:
      type: object
      properties:
        completionFromAudio:
          $ref: "#/components/schemas/NoteDetailsCompletion"
        rawSRT:
          type: string
        endTimestamp:
          type: string
    InitialInfo:
      type: object
      properties:
        noteId:
          type: integer
          format: int32
        skipMemoryTracking:
          type: boolean
    AssessmentAttempt:
      type: object
      properties:
        id:
          type: integer
          format: int32
        totalQuestionCount:
          type: integer
          format: int32
        answersCorrect:
          type: integer
          format: int32
        notebookId:
          type: integer
          format: int32
        notebookTitle:
          type: string
        submittedAt:
          type: string
          format: date-time
        isPass:
          type: boolean
        assessmentQuestionInstances:
          type: array
          items:
            $ref: "#/components/schemas/AssessmentQuestionInstance"
        certifiable:
          type: boolean
      required:
      - id
      - notebookId
    SuggestedTitleDTO:
      type: object
      properties:
        title:
          type: string
    ToolCallResult:
      type: object
      properties:
        status:
          type: string
    AiGeneratedImage:
      type: object
      properties:
        b64encoded:
          type: string
    NotebookAssistant:
      type: object
      properties:
        id:
          type: integer
          format: int32
        creator:
          $ref: "#/components/schemas/User"
        notebook:
          $ref: "#/components/schemas/Notebook"
        assistantId:
          type: string
        createdAt:
          type: string
          format: date-time
      required:
      - assistantId
      - createdAt
      - creator
      - id
      - notebook
    UserDTO:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
          minLength: 1
        dailyAssimilationCount:
          type: integer
          format: int32
        spaceIntervals:
          type: string
          pattern: "^\\d+((,\\s*\\d+){1,1000})*$"
      required:
      - name
    NoteUpdateTitleDTO:
      type: object
      properties:
        newTitle:
          type: string
          maxLength: 150
          minLength: 1
      required:
      - newTitle
    NoteUpdateDetailsDTO:
      type: object
      properties:
        details:
          type: string
    NoteAccessoriesDTO:
      type: object
      properties:
        url:
          type: string
        imageUrl:
          type: string
        imageMask:
          type: string
          pattern: "^(((-?[0-9.]+\\s+){3}-?[0-9.]+\\s+)*((-?[0-9.]+\\s+){3}-?[0-9.]+))?$"
        useParentImage:
          type: boolean
        uploadImage:
          type: string
          format: binary
    ImageWithMask:
      type: object
      properties:
        noteImage:
          type: string
        imageMask:
          type: string
    NoteAccessory:
      type: object
      properties:
        id:
          type: integer
          format: int32
        url:
          type: string
        imageUrl:
          type: string
        imageMask:
          type: string
        useParentImage:
          type: boolean
        imageWithMask:
          $ref: "#/components/schemas/ImageWithMask"
      required:
      - id
    UpdateAiAssistantRequest:
      type: object
      properties:
        additionalInstructions:
          type: string
    NotebookAiAssistant:
      type: object
      properties:
        id:
          type: integer
          format: int32
        notebook:
          $ref: "#/components/schemas/Notebook"
        additionalInstructionsToAi:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
      - id
    WikidataSearchEntity:
      type: object
      properties:
        id:
          type: string
        label:
          type: string
        description:
          type: string
      required:
      - label
    WikidataEntityData:
      type: object
      properties:
        WikidataTitleInEnglish:
          type: string
        WikipediaEnglishUrl:
          type: string
      required:
      - WikidataTitleInEnglish
      - WikipediaEnglishUrl
    CurrentUserInfo:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/User"
        externalIdentifier:
          type: string
    DueMemoryTrackers:
      type: object
      properties:
        toRepeatCount:
          type: integer
          format: int32
        totalAssimilatedCount:
          type: integer
          format: int32
        recallWindowEndAt:
          type: string
          format: date-time
        toRepeat:
          type: array
          items:
            $ref: "#/components/schemas/MemoryTrackerLite"
        dueInDays:
          type: integer
          format: int32
      required:
      - toRepeatCount
      - totalAssimilatedCount
    MemoryTrackerLite:
      type: object
      properties:
        memoryTrackerId:
          type: integer
          format: int32
        spelling:
          type: boolean
    RecallStatus:
      type: object
      properties:
        toRepeatCount:
          type: integer
          format: int32
        totalAssimilatedCount:
          type: integer
          format: int32
        recallWindowEndAt:
          type: string
          format: date-time
      required:
      - toRepeatCount
      - totalAssimilatedCount
    NoteInfo:
      type: object
      properties:
        memoryTrackers:
          type: array
          items:
            $ref: "#/components/schemas/MemoryTracker"
        note:
          $ref: "#/components/schemas/NoteRealm"
        createdAt:
          type: string
          format: date-time
        recallSetting:
          $ref: "#/components/schemas/RecallSetting"
      required:
      - createdAt
      - note
    BareNote:
      type: object
      properties:
        uri:
          type: string
        subjectUriAndTitle:
          type: string
        predicate:
          type: string
        title:
          type: string
        objectUriAndTitle:
          type: string
        parentUriAndTitle:
          type: string
        relationToFocusNote:
          type: string
          enum:
          - Self
          - Parent
          - Object
          - Child
          - PriorSibling
          - YoungerSibling
          - InboundReference
          - SubjectOfInboundReference
          - AncestorInContextualPath
          - AncestorInObjectContextualPath
          - ObjectOfReifiedChild
          - SiblingOfParent
          - SiblingOfParentOfObject
          - ChildOfSiblingOfParent
          - ChildOfSiblingOfParentOfObject
          - InboundReferenceContextualPath
          - SiblingOfSubjectOfInboundReference
          - InboundReferenceToObjectOfReifiedChild
        details:
          type: string
    FocusNote:
      type: object
      properties:
        uri:
          type: string
        subjectUriAndTitle:
          type: string
        predicate:
          type: string
        title:
          type: string
        objectUriAndTitle:
          type: string
        parentUriAndTitle:
          type: string
        relationToFocusNote:
          type: string
          enum:
          - Self
          - Parent
          - Object
          - Child
          - PriorSibling
          - YoungerSibling
          - InboundReference
          - SubjectOfInboundReference
          - AncestorInContextualPath
          - AncestorInObjectContextualPath
          - ObjectOfReifiedChild
          - SiblingOfParent
          - SiblingOfParentOfObject
          - ChildOfSiblingOfParent
          - ChildOfSiblingOfParentOfObject
          - InboundReferenceContextualPath
          - SiblingOfSubjectOfInboundReference
          - InboundReferenceToObjectOfReifiedChild
        details:
          type: string
        contextualPath:
          type: array
          items:
            type: string
        children:
          type: array
          items:
            type: string
        priorSiblings:
          type: array
          items:
            type: string
        youngerSiblings:
          type: array
          items:
            type: string
        inboundReferences:
          type: array
          items:
            type: string
    GraphRAGResult:
      type: object
      properties:
        focusNote:
          $ref: "#/components/schemas/FocusNote"
        relatedNotes:
          type: array
          items:
            $ref: "#/components/schemas/BareNote"
    NotebooksViewedByUser:
      type: object
      properties:
        notebooks:
          type: array
          items:
            $ref: "#/components/schemas/Notebook"
        subscriptions:
          type: array
          items:
            $ref: "#/components/schemas/Subscription"
      required:
      - notebooks
    SpellingQuestion:
      type: object
      properties:
        stem:
          type: string
        notebook:
          $ref: "#/components/schemas/Notebook"
    FailureReport:
      type: object
      properties:
        id:
          type: integer
          format: int32
        errorName:
          type: string
        errorDetail:
          type: string
        issueNumber:
          type: integer
          format: int32
        createDatetime:
          type: string
          format: date-time
        githubIssue:
          $ref: "#/components/schemas/GithubIssue"
      required:
      - createDatetime
      - errorDetail
      - errorName
    FailureReportForView:
      type: object
      properties:
        failureReport:
          $ref: "#/components/schemas/FailureReport"
        githubIssueUrl:
          type: string
    GithubIssue:
      type: object
      properties:
        title:
          type: string
        body:
          type: string
    CircleForUserView:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        invitationCode:
          type: string
        notebooks:
          $ref: "#/components/schemas/NotebooksViewedByUser"
        members:
          type: array
          items:
            $ref: "#/components/schemas/UserForOtherUserView"
      required:
      - id
      - invitationCode
      - members
      - name
      - notebooks
    UserForOtherUserView:
      type: object
      properties:
        name:
          type: string
    AssimilationCountDTO:
      type: object
      properties:
        dueCount:
          type: integer
          format: int32
        assimilatedCountOfTheDay:
          type: integer
          format: int32
        totalUnassimilatedCount:
          type: integer
          format: int32
    Annotation:
      type: object
      properties:
        index:
          type: integer
          format: int32
        type:
          type: string
        text:
          type: string
        file_path:
          $ref: "#/components/schemas/FilePath"
        file_citation:
          $ref: "#/components/schemas/FileCitation"
        start_index:
          type: integer
          format: int32
        end_index:
          type: integer
          format: int32
    Attachment:
      type: object
      properties:
        tools:
          type: array
          items:
            oneOf:
            - $ref: "#/components/schemas/CodeInterpreterTool"
            - $ref: "#/components/schemas/FileSearchTool"
            - $ref: "#/components/schemas/FunctionTool"
        file_id:
          type: string
    ChatResponseFormat:
      type: object
      properties:
        type:
          type: string
        jsonSchema:
          $ref: "#/components/schemas/ResponseJsonSchema"
    CodeInterpreterResources:
      type: object
      properties:
        file_ids:
          type: array
          items:
            type: string
    CodeInterpreterTool:
      allOf:
      - $ref: "#/components/schemas/Tool"
    CompletionTokensDetails:
      type: object
      properties:
        reasoning_tokens:
          type: integer
          format: int64
        audio_tokens:
          type: integer
          format: int64
        accepted_prediction_tokens:
          type: integer
          format: int64
        rejected_prediction_tokens:
          type: integer
          format: int64
    Delta:
      type: object
      properties:
        role:
          type: string
        content:
          type: array
          items:
            $ref: "#/components/schemas/DeltaContent"
    DeltaContent:
      type: object
      properties:
        index:
          type: integer
          format: int32
        type:
          type: string
        text:
          $ref: "#/components/schemas/Text"
        image_file:
          $ref: "#/components/schemas/ImageFile"
        image_url:
          $ref: "#/components/schemas/ImageUrl"
    DeltaOfRunStep:
      type: object
      properties:
        delta:
          $ref: "#/components/schemas/StepDelta"
    DummyForGeneratingTypes:
      type: object
      properties:
        message:
          $ref: "#/components/schemas/Message"
        runStep:
          $ref: "#/components/schemas/RunStep"
        runStepDelta:
          $ref: "#/components/schemas/DeltaOfRunStep"
        messageDelta:
          $ref: "#/components/schemas/MessageDelta"
        run:
          $ref: "#/components/schemas/Run"
        noteDetailsCompletion:
          $ref: "#/components/schemas/NoteDetailsCompletion"
        titleReplacement:
          $ref: "#/components/schemas/TitleReplacement"
        aiToolName:
          type: string
          enum:
          - complete_note_details
          - suggest_note_title
          - ask_single_answer_multiple_choice_question
    ExpiresAfter:
      type: object
      properties:
        anchor:
          type: string
        days:
          type: integer
          format: int32
    FileCitation:
      type: object
      properties:
        quote:
          type: string
        file_id:
          type: string
    FileCounts:
      type: object
      properties:
        completed:
          type: integer
          format: int32
        failed:
          type: integer
          format: int32
        cancelled:
          type: integer
          format: int32
        total:
          type: integer
          format: int32
        in_progress:
          type: integer
          format: int32
    FilePath:
      type: object
      properties:
        file_id:
          type: string
    FileSearch:
      type: object
      properties:
        max_num_results:
          type: integer
          format: int32
        ranking_options:
          $ref: "#/components/schemas/FileSearchRankingOptions"
    FileSearchRankingOptions:
      type: object
      properties:
        ranker:
          type: string
        score_threshold:
          type: number
          format: double
      required:
      - score_threshold
    FileSearchResources:
      type: object
      properties:
        vector_store_ids:
          type: array
          items:
            type: string
        vector_stores:
          type: array
          items:
            $ref: "#/components/schemas/VectorStore"
    FileSearchTool:
      allOf:
      - $ref: "#/components/schemas/Tool"
      - type: object
        properties:
          file_search:
            $ref: "#/components/schemas/FileSearch"
    Function:
      type: object
      properties:
        name:
          type: string
    FunctionTool:
      allOf:
      - $ref: "#/components/schemas/Tool"
      - type: object
        properties:
          function:
            type: object
    ImageFile:
      type: object
      properties:
        detail:
          type: string
        file_id:
          type: string
    ImageUrl:
      type: object
      properties:
        url:
          type: string
        detail:
          type: string
    IncompleteDetails:
      type: object
      properties:
        reason:
          type: string
    JsonNode:
      type: object
    LastError:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    Message:
      type: object
      properties:
        id:
          type: string
        object:
          type: string
        status:
          type: string
        role:
          type: string
        content:
          type: array
          items:
            $ref: "#/components/schemas/MessageContent"
        attachments:
          type: array
          items:
            $ref: "#/components/schemas/Attachment"
        metadata:
          type: object
          additionalProperties:
            type: string
        created_at:
          type: integer
          format: int32
        thread_id:
          type: string
        incomplete_details:
          $ref: "#/components/schemas/IncompleteDetails"
        completed_at:
          type: integer
          format: int32
        incomplete_at:
          type: integer
          format: int32
        assistant_id:
          type: string
        run_id:
          type: string
    MessageContent:
      type: object
      properties:
        type:
          type: string
        text:
          $ref: "#/components/schemas/Text"
        image_file:
          $ref: "#/components/schemas/ImageFile"
        image_url:
          $ref: "#/components/schemas/ImageUrl"
    MessageCreation:
      type: object
      properties:
        message_id:
          type: string
    MessageDelta:
      type: object
      properties:
        id:
          type: string
        object:
          type: string
        delta:
          $ref: "#/components/schemas/Delta"
    PromptTokensDetails:
      type: object
      properties:
        cached_tokens:
          type: integer
          format: int64
        audio_tokens:
          type: integer
          format: int64
    RequiredAction:
      type: object
      properties:
        type:
          type: string
        submit_tool_outputs:
          $ref: "#/components/schemas/SubmitToolOutputs"
    ResponseJsonSchema:
      type: object
      properties:
        name:
          type: string
        strict:
          type: boolean
        schema:
          type: object
    Run:
      type: object
      properties:
        id:
          type: string
        object:
          type: string
        status:
          type: string
        model:
          type: string
        instructions:
          type: string
        tools:
          type: array
          items:
            oneOf:
            - $ref: "#/components/schemas/CodeInterpreterTool"
            - $ref: "#/components/schemas/FileSearchTool"
            - $ref: "#/components/schemas/FunctionTool"
        metadata:
          type: object
          additionalProperties:
            type: string
        usage:
          $ref: "#/components/schemas/Usage"
        temperature:
          type: number
          format: double
        created_at:
          type: integer
          format: int32
        thread_id:
          type: string
        assistant_id:
          type: string
        required_action:
          $ref: "#/components/schemas/RequiredAction"
        last_error:
          $ref: "#/components/schemas/LastError"
        expires_at:
          type: integer
          format: int32
        started_at:
          type: integer
          format: int32
        cancelled_at:
          type: integer
          format: int32
        failed_at:
          type: integer
          format: int32
        completed_at:
          type: integer
          format: int32
        incomplete_details:
          $ref: "#/components/schemas/IncompleteDetails"
        top_p:
          type: number
          format: double
        max_prompt_tokens:
          type: integer
          format: int32
        max_completion_tokens:
          type: integer
          format: int32
        truncation_strategy:
          $ref: "#/components/schemas/TruncationStrategy"
        tool_choice:
          $ref: "#/components/schemas/ToolChoice"
        response_format:
          $ref: "#/components/schemas/ChatResponseFormat"
        tool_resources:
          $ref: "#/components/schemas/ToolResources"
    RunImage:
      type: object
      properties:
        file_id:
          type: string
    RunStep:
      type: object
      properties:
        id:
          type: string
        object:
          type: string
        type:
          type: string
        status:
          type: string
        metadata:
          type: object
          additionalProperties:
            type: string
        usage:
          $ref: "#/components/schemas/Usage"
        created_at:
          type: integer
          format: int32
        assistant_id:
          type: string
        thread_id:
          type: string
        run_id:
          type: string
        step_details:
          $ref: "#/components/schemas/StepDetails"
        last_error:
          $ref: "#/components/schemas/LastError"
        expired_at:
          type: integer
          format: int32
        cancelled_at:
          type: integer
          format: int32
        failed_at:
          type: integer
          format: int32
        completed_at:
          type: integer
          format: int32
        expires_at:
          type: integer
          format: int32
    StepDelta:
      type: object
      properties:
        step_details:
          $ref: "#/components/schemas/StepDetails"
    StepDetails:
      type: object
      properties:
        type:
          type: string
        message_creation:
          $ref: "#/components/schemas/MessageCreation"
        tool_calls:
          type: array
          items:
            $ref: "#/components/schemas/ToolCall"
    SubmitToolOutputs:
      type: object
      properties:
        tool_calls:
          type: array
          items:
            $ref: "#/components/schemas/ToolCall"
    Text:
      type: object
      properties:
        value:
          type: string
        annotations:
          type: array
          items:
            $ref: "#/components/schemas/Annotation"
    TitleReplacement:
      type: object
      properties:
        newTitle:
          type: string
          maxLength: 150
          minLength: 1
      required:
      - newTitle
    Tool:
      type: object
      discriminator:
        propertyName: type
      properties:
        type:
          type: string
    ToolCall:
      type: object
      properties:
        index:
          type: integer
          format: int32
        id:
          type: string
        type:
          type: string
        function:
          $ref: "#/components/schemas/ToolCallFunction"
        code_interpreter:
          $ref: "#/components/schemas/ToolCallCodeInterpreter"
        file_search:
          $ref: "#/components/schemas/ToolCallFileSearch"
    ToolCallCodeInterpreter:
      type: object
      properties:
        input:
          type: string
        outputs:
          type: array
          items:
            $ref: "#/components/schemas/ToolCallCodeInterpreterOutput"
    ToolCallCodeInterpreterOutput:
      type: object
      properties:
        index:
          type: integer
          format: int32
        type:
          type: string
        logs:
          type: string
        image:
          $ref: "#/components/schemas/RunImage"
    ToolCallFileSearch:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: "#/components/schemas/ToolCallFileSearchResult"
        ranking_options:
          $ref: "#/components/schemas/FileSearchRankingOptions"
    ToolCallFileSearchResult:
      type: object
      properties:
        score:
          type: number
          format: double
        content:
          type: array
          items:
            $ref: "#/components/schemas/ToolCallFileSearchResultContent"
        file_id:
          type: string
        file_name:
          type: string
    ToolCallFileSearchResultContent:
      type: object
      properties:
        type:
          type: string
        text:
          type: string
    ToolCallFunction:
      type: object
      properties:
        name:
          type: string
        arguments:
          $ref: "#/components/schemas/JsonNode"
        output:
          type: string
    ToolChoice:
      type: object
      properties:
        function:
          $ref: "#/components/schemas/Function"
        type:
          type: string
    ToolResources:
      type: object
      properties:
        code_interpreter:
          $ref: "#/components/schemas/CodeInterpreterResources"
        file_search:
          $ref: "#/components/schemas/FileSearchResources"
    TruncationStrategy:
      type: object
      properties:
        type:
          type: string
        last_messages:
          type: integer
          format: int32
    Usage:
      type: object
      properties:
        prompt_tokens:
          type: integer
          format: int64
        completion_tokens:
          type: integer
          format: int64
        total_tokens:
          type: integer
          format: int64
        prompt_tokens_details:
          $ref: "#/components/schemas/PromptTokensDetails"
        completion_tokens_details:
          $ref: "#/components/schemas/CompletionTokensDetails"
    VectorStore:
      type: object
      properties:
        id:
          type: string
        object:
          type: string
        name:
          type: string
        bytes:
          type: integer
          format: int32
        status:
          type: string
        metadata:
          type: object
          additionalProperties:
            type: string
        created_at:
          type: integer
          format: int32
        file_counts:
          $ref: "#/components/schemas/FileCounts"
        expires_after:
          $ref: "#/components/schemas/ExpiresAfter"
        expires_at:
          type: integer
          format: int32
        last_active_at:
          type: integer
          format: int32
