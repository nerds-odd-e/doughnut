{
  "root": true,
  "$schema": "https://biomejs.dev/schemas/2.2.5/schema.json",
  "vcs": {
    "clientKind": "git",
    "enabled": true,
    "useIgnoreFile": true,
    "defaultBranch": "main"
  },
  "files": {
    "includes": [
      "**",
      "!**/node_modules",
      "!**/*.cjs",
      "!**/*.json",
      "!**/farm.config.ts",
      "!**/vite.config.ts",
      "!**/auto-imports.d.ts",
      "!**/components.d.ts",
      "!**/typed-router.d.ts",
      "!**/src/@types/doughnut/index.d.ts",
      "!**/src/generated/backend/**/*.ts",
      "!**/tests/**/*.js",
      "!**/tests/shims-vue.d.ts",
      "!**/public"
    ],
    "ignoreUnknown": true
  },
  "formatter": {
    "enabled": true,
    "indentStyle": "space",
    "indentWidth": 2,
    "lineWidth": 80
  },
  "assist": { "actions": { "source": { "organizeImports": "off" } } },
  "linter": {
    "enabled": true,
    "rules": {
      "recommended": false,
      "complexity": {
        "noBannedTypes": "error",
        "noExtraBooleanCast": "error",
        "noUselessCatch": "error",
        "noUselessConstructor": "error",
        "noUselessLabel": "error",
        "noUselessLoneBlockStatements": "error",
        "noUselessRename": "error",
        "noUselessTernary": "error",
        "noUselessTypeConstraint": "error",
        "noVoid": "error",
        "useLiteralKeys": "error",
        "useRegexLiterals": "error",
        "noAdjacentSpacesInRegex": "error",
        "noArguments": "error",
        "noCommaOperator": "error",
        "useNumericLiterals": "error"
      },
      "correctness": {
        "noConstAssign": "error",
        "noConstantCondition": "error",
        "noConstructorReturn": "error",
        "noEmptyCharacterClassInRegex": "error",
        "noEmptyPattern": "error",
        "noGlobalObjectCalls": "error",
        "noInnerDeclarations": "error",
        "noInvalidConstructorSuper": "error",
        "noInvalidUseBeforeDeclaration": "error",
        "noNodejsModules": "off",
        "noNonoctalDecimalEscape": "error",
        "noPrecisionLoss": "error",
        "noSelfAssign": "error",
        "noSetterReturn": "error",
        "noSwitchDeclarations": "error",
        "noUndeclaredVariables": "error",
        "noUnreachable": "error",
        "noUnreachableSuper": "error",
        "noUnsafeFinally": "error",
        "noUnsafeOptionalChaining": "error",
        "noUnusedLabels": "error",
        "noUnusedPrivateClassMembers": "off",
        "noUnusedVariables": "warn",
        "useIsNan": "error",
        "useValidForDirection": "error",
        "useYield": "error",
        "noInvalidBuiltinInstantiation": "error",
        "useValidTypeof": "error"
      },
      "security": { "noGlobalEval": "error" },
      "style": {
        "noDefaultExport": "off",
        "noNamespace": "error",
        "noNegationElse": "off",
        "noParameterAssign": "error",
        "noRestrictedGlobals": {
          "level": "error",
          "options": {
            "deniedGlobals": {
              "isFinite": "TODO: Add a custom message here.",
              "isNaN": "TODO: Add a custom message here.",
              "addEventListener": "TODO: Add a custom message here.",
              "blur": "TODO: Add a custom message here.",
              "close": "TODO: Add a custom message here.",
              "closed": "TODO: Add a custom message here.",
              "confirm": "TODO: Add a custom message here.",
              "defaultStatus": "TODO: Add a custom message here.",
              "defaultstatus": "TODO: Add a custom message here.",
              "event": "TODO: Add a custom message here.",
              "external": "TODO: Add a custom message here.",
              "find": "TODO: Add a custom message here.",
              "focus": "TODO: Add a custom message here.",
              "frameElement": "TODO: Add a custom message here.",
              "frames": "TODO: Add a custom message here.",
              "history": "TODO: Add a custom message here.",
              "innerHeight": "TODO: Add a custom message here.",
              "innerWidth": "TODO: Add a custom message here.",
              "length": "TODO: Add a custom message here.",
              "location": "TODO: Add a custom message here.",
              "locationbar": "TODO: Add a custom message here.",
              "menubar": "TODO: Add a custom message here.",
              "moveBy": "TODO: Add a custom message here.",
              "moveTo": "TODO: Add a custom message here.",
              "name": "TODO: Add a custom message here.",
              "onblur": "TODO: Add a custom message here.",
              "onerror": "TODO: Add a custom message here.",
              "onfocus": "TODO: Add a custom message here.",
              "onload": "TODO: Add a custom message here.",
              "onresize": "TODO: Add a custom message here.",
              "onunload": "TODO: Add a custom message here.",
              "open": "TODO: Add a custom message here.",
              "opener": "TODO: Add a custom message here.",
              "opera": "TODO: Add a custom message here.",
              "outerHeight": "TODO: Add a custom message here.",
              "outerWidth": "TODO: Add a custom message here.",
              "pageXOffset": "TODO: Add a custom message here.",
              "pageYOffset": "TODO: Add a custom message here.",
              "parent": "TODO: Add a custom message here.",
              "print": "TODO: Add a custom message here.",
              "removeEventListener": "TODO: Add a custom message here.",
              "resizeBy": "TODO: Add a custom message here.",
              "resizeTo": "TODO: Add a custom message here.",
              "screen": "TODO: Add a custom message here.",
              "screenLeft": "TODO: Add a custom message here.",
              "screenTop": "TODO: Add a custom message here.",
              "screenX": "TODO: Add a custom message here.",
              "screenY": "TODO: Add a custom message here.",
              "scroll": "TODO: Add a custom message here.",
              "scrollbars": "TODO: Add a custom message here.",
              "scrollBy": "TODO: Add a custom message here.",
              "scrollTo": "TODO: Add a custom message here.",
              "scrollX": "TODO: Add a custom message here.",
              "scrollY": "TODO: Add a custom message here.",
              "self": "TODO: Add a custom message here.",
              "status": "TODO: Add a custom message here.",
              "statusbar": "TODO: Add a custom message here.",
              "stop": "TODO: Add a custom message here.",
              "toolbar": "TODO: Add a custom message here.",
              "top": "TODO: Add a custom message here."
            }
          }
        },
        "useAsConstAssertion": "error",
        "useBlockStatements": "off",
        "useCollapsedElseIf": "error",
        "useConst": "error",
        "useDefaultParameterLast": "error",
        "useExponentiationOperator": "error",
        "useShorthandAssign": "error",
        "useSingleVarDeclarator": "error",
        "useTemplate": "error",
        "useArrayLiterals": "off"
      },
      "suspicious": {
        "noAsyncPromiseExecutor": "error",
        "noCatchAssign": "error",
        "noClassAssign": "error",
        "noCompareNegZero": "error",
        "noControlCharactersInRegex": "error",
        "noDebugger": "warn",
        "noDoubleEquals": "error",
        "noDuplicateCase": "error",
        "noDuplicateClassMembers": "error",
        "noDuplicateObjectKeys": "error",
        "noDuplicateParameters": "error",
        "noEmptyBlockStatements": "error",
        "noExplicitAny": "error",
        "noExtraNonNullAssertion": "error",
        "noFallthroughSwitchClause": "error",
        "noFunctionAssign": "error",
        "noGlobalAssign": "error",
        "noImportAssign": "error",
        "noLabelVar": "error",
        "noMisleadingCharacterClass": "error",
        "noMisleadingInstantiator": "error",
        "noPrototypeBuiltins": "error",
        "noRedeclare": "error",
        "noSelfCompare": "error",
        "noShadowRestrictedNames": "error",
        "noUnsafeDeclarationMerging": "error",
        "noUnsafeNegation": "error",
        "useAwait": "off",
        "useDefaultSwitchClauseLast": "error",
        "useGetterReturn": "error",
        "noWith": "error",
        "noVar": "error"
      }
    },
    "includes": [
      "**",
      "!**/.git",
      "!**/.github",
      "!**/dist",
      "!**/node_modules",
      "!**/*.md",
      "!**/index.html",
      "!**/tsconfig.json",
      "!**/tsconfig.node.json",
      "!**/.eslintrc.cjs",
      "!**/vite.config.ts",
      "!**/farm.config.ts",
      "!**/components.d.ts",
      "!**/index.d.ts",
      "!**/shims-vue.d.ts",
      "!**/vitest.config.ts",
      "!**/setupVitest.js",
      "!**/typed-router.d.ts",
      "!**/public"
    ]
  },
  "javascript": {
    "formatter": {
      "trailingCommas": "es5",
      "semicolons": "asNeeded"
    }
  },
  "overrides": [
    {
      "includes": ["**/*.vue"],
      "linter": {
        "rules": {
          "correctness": {
            "noUndeclaredVariables": "off",
            "noUnusedVariables": "off"
          }
        }
      }
    },
    {
      "includes": ["**/*.ts", "**/*.tsx"],
      "linter": {
        "rules": { "correctness": { "noUndeclaredVariables": "off" } }
      }
    },
    {
      "includes": ["**/*.config.js", "**/*.config.ts"],
      "linter": { "rules": {} }
    },
    {
      "includes": [],
      "linter": { "rules": {} }
    },
    {
      "includes": ["**/*.ts", "**/*.tsx", "**/*.mts", "**/*.cts"],
      "linter": {
        "rules": {
          "correctness": {
            "noConstAssign": "off",
            "noGlobalObjectCalls": "off",
            "noInvalidConstructorSuper": "off",
            "noSetterReturn": "off",
            "noUndeclaredVariables": "off",
            "noUnreachable": "off",
            "noUnreachableSuper": "off",
            "noInvalidBuiltinInstantiation": "off"
          },
          "style": {
            "useConst": "error"
          },
          "suspicious": {
            "noDuplicateClassMembers": "off",
            "noDuplicateObjectKeys": "off",
            "noDuplicateParameters": "off",
            "noFunctionAssign": "off",
            "noImportAssign": "off",
            "noRedeclare": "off",
            "noUnsafeNegation": "off",
            "useGetterReturn": "off",
            "noVar": "error"
          },
          "complexity": {
            "noArguments": "error"
          }
        }
      }
    }
  ]
}
